{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "13538408368532641022"
    },
    "description": "Deploy SharePoint Subscription / 2019 / 2016 with a lightweight configuration. Each version is independent and may or may not be deployed.",
    "author": "Yvand"
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all the resources."
      }
    },
    "provisionSharePointSubscription": {
      "type": "string",
      "defaultValue": "Subscription-Latest",
      "allowedValues": [
        "Subscription-Latest",
        "Subscription-24H2",
        "Subscription-24H1",
        "Subscription-23H2",
        "Subscription-23H1",
        "Subscription-22H2",
        "Subscription-RTM",
        "No"
      ],
      "metadata": {
        "description": "Specify if a SharePoint Subscription farm should be provisioned, and which version if so."
      }
    },
    "provisionSharePoint2019": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify if a SharePoint 2019 farm should be provisioned."
      }
    },
    "provisionSharePoint2016": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify if a SharePoint 2016 farm should be provisioned."
      }
    },
    "domainFqdn": {
      "type": "string",
      "defaultValue": "contoso.local",
      "minLength": 5,
      "metadata": {
        "description": "FQDN of the AD forest to create."
      }
    },
    "configureADFS": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify if ADFS shoulde be provisioned, and used in SharePoint in an extended zone."
      }
    },
    "enableAzureBastion": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify if Azure Bastion should be provisioned. See https://azure.microsoft.com/en-us/services/azure-bastion for more information."
      }
    },
    "rdpTrafficRule": {
      "type": "string",
      "defaultValue": "No",
      "minLength": 1,
      "metadata": {
        "description": "Specify if a rule in the network security groups should allow the inbound RDP traffic:\n- \"No\" (default): No rule is created, RDP traffic is blocked.\n- \"*\" or \"Internet\": RDP traffic is allowed from everywhere.\n- CIDR notation (e.g. 192.168.99.0/24 or 2001:1234::/64) or an IP address (e.g. 192.168.99.0 or 2001:1234::): RDP traffic is allowed from the IP address / pattern specified.\n"
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the AD and SharePoint administrator. 'admin' and 'administrator' are not allowed."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
      }
    },
    "otherAccountsPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Password for all service accounts and SharePoint passphrase. Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
      }
    },
    "timeZone": {
      "type": "string",
      "defaultValue": "Romance Standard Time",
      "allowedValues": [
        "Dateline Standard Time",
        "UTC-11",
        "Aleutian Standard Time",
        "Hawaiian Standard Time",
        "Marquesas Standard Time",
        "Alaskan Standard Time",
        "UTC-09",
        "Pacific Standard Time (Mexico)",
        "UTC-08",
        "Pacific Standard Time",
        "US Mountain Standard Time",
        "Mountain Standard Time (Mexico)",
        "Mountain Standard Time",
        "Central America Standard Time",
        "Central Standard Time",
        "Easter Island Standard Time",
        "Central Standard Time (Mexico)",
        "Canada Central Standard Time",
        "SA Pacific Standard Time",
        "Eastern Standard Time (Mexico)",
        "Eastern Standard Time",
        "Haiti Standard Time",
        "Cuba Standard Time",
        "US Eastern Standard Time",
        "Turks And Caicos Standard Time",
        "Paraguay Standard Time",
        "Atlantic Standard Time",
        "Venezuela Standard Time",
        "Central Brazilian Standard Time",
        "SA Western Standard Time",
        "Pacific SA Standard Time",
        "Newfoundland Standard Time",
        "Tocantins Standard Time",
        "E. South America Standard Time",
        "SA Eastern Standard Time",
        "Argentina Standard Time",
        "Greenland Standard Time",
        "Montevideo Standard Time",
        "Magallanes Standard Time",
        "Saint Pierre Standard Time",
        "Bahia Standard Time",
        "UTC-02",
        "Mid-Atlantic Standard Time",
        "Azores Standard Time",
        "Cape Verde Standard Time",
        "UTC",
        "GMT Standard Time",
        "Greenwich Standard Time",
        "Sao Tome Standard Time",
        "Morocco Standard Time",
        "W. Europe Standard Time",
        "Central Europe Standard Time",
        "Romance Standard Time",
        "Central European Standard Time",
        "W. Central Africa Standard Time",
        "Jordan Standard Time",
        "GTB Standard Time",
        "Middle East Standard Time",
        "Egypt Standard Time",
        "E. Europe Standard Time",
        "Syria Standard Time",
        "West Bank Standard Time",
        "South Africa Standard Time",
        "FLE Standard Time",
        "Israel Standard Time",
        "Kaliningrad Standard Time",
        "Sudan Standard Time",
        "Libya Standard Time",
        "Namibia Standard Time",
        "Arabic Standard Time",
        "Turkey Standard Time",
        "Arab Standard Time",
        "Belarus Standard Time",
        "Russian Standard Time",
        "E. Africa Standard Time",
        "Iran Standard Time",
        "Arabian Standard Time",
        "Astrakhan Standard Time",
        "Azerbaijan Standard Time",
        "Russia Time Zone 3",
        "Mauritius Standard Time",
        "Saratov Standard Time",
        "Georgian Standard Time",
        "Volgograd Standard Time",
        "Caucasus Standard Time",
        "Afghanistan Standard Time",
        "West Asia Standard Time",
        "Ekaterinburg Standard Time",
        "Pakistan Standard Time",
        "Qyzylorda Standard Time",
        "India Standard Time",
        "Sri Lanka Standard Time",
        "Nepal Standard Time",
        "Central Asia Standard Time",
        "Bangladesh Standard Time",
        "Omsk Standard Time",
        "Myanmar Standard Time",
        "SE Asia Standard Time",
        "Altai Standard Time",
        "W. Mongolia Standard Time",
        "North Asia Standard Time",
        "N. Central Asia Standard Time",
        "Tomsk Standard Time",
        "China Standard Time",
        "North Asia East Standard Time",
        "Singapore Standard Time",
        "W. Australia Standard Time",
        "Taipei Standard Time",
        "Ulaanbaatar Standard Time",
        "Aus Central W. Standard Time",
        "Transbaikal Standard Time",
        "Tokyo Standard Time",
        "North Korea Standard Time",
        "Korea Standard Time",
        "Yakutsk Standard Time",
        "Cen. Australia Standard Time",
        "AUS Central Standard Time",
        "E. Australia Standard Time",
        "AUS Eastern Standard Time",
        "West Pacific Standard Time",
        "Tasmania Standard Time",
        "Vladivostok Standard Time",
        "Lord Howe Standard Time",
        "Bougainville Standard Time",
        "Russia Time Zone 10",
        "Magadan Standard Time",
        "Norfolk Standard Time",
        "Sakhalin Standard Time",
        "Central Pacific Standard Time",
        "Russia Time Zone 11",
        "New Zealand Standard Time",
        "UTC+12",
        "Fiji Standard Time",
        "Kamchatka Standard Time",
        "Chatham Islands Standard Time",
        "UTC+13",
        "Tonga Standard Time",
        "Samoa Standard Time",
        "Line Islands Standard Time"
      ],
      "minLength": 2,
      "metadata": {
        "description": "Time zone of the virtual machines. Type \"[TimeZoneInfo]::GetSystemTimeZones().Id\" in PowerShell to get the list."
      }
    },
    "enableHybridBenefitServerLicenses": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure Hybrid Benefit to use your on-premises Windows Server licenses and reduce cost. See https://docs.microsoft.com/en-us/azure/virtual-machines/windows/hybrid-use-benefit-licensing for more information."
      }
    },
    "vmDcSize": {
      "type": "string",
      "defaultValue": "Standard_B2als_v2",
      "metadata": {
        "description": "Size of the DC VM"
      }
    },
    "vmDcStorage": {
      "type": "string",
      "defaultValue": "StandardSSD_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "StandardSSD_ZRS",
        "Premium_LRS",
        "PremiumV2_LRS",
        "Premium_ZRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
      }
    },
    "vmSqlSize": {
      "type": "string",
      "defaultValue": "Standard_B2as_v2",
      "metadata": {
        "description": "Size of the SQL VM"
      }
    },
    "vmSqlStorage": {
      "type": "string",
      "defaultValue": "StandardSSD_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "StandardSSD_ZRS",
        "Premium_LRS",
        "PremiumV2_LRS",
        "Premium_ZRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
      }
    },
    "vmSharePointSize": {
      "type": "string",
      "defaultValue": "Standard_B4as_v2",
      "metadata": {
        "description": "Size of the SharePoint VM"
      }
    },
    "vmSharePointStorage": {
      "type": "string",
      "defaultValue": "StandardSSD_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "StandardSSD_ZRS",
        "Premium_LRS",
        "PremiumV2_LRS",
        "Premium_ZRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/azure-devtestlab/raw/master/Environments/SharePoint-AllVersions",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    }
  },
  "variables": {
    "_artifactsLocationWithTrailingSlash": "[format('{0}/', parameters('_artifactsLocation'))]",
    "resourceGroupNameFormatted": "[replace(replace(replace(replace(resourceGroup().name, '.', '-'), '(', '-'), ')', '-'), '_', '-')]",
    "sharePointSettings": {
      "sharePointImagesList": {
        "Subscription": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition:latest",
        "sp2019": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2019gen2smalldisk:latest",
        "sp2016": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2016:latest"
      },
      "sharePointSubscriptionBits": [
        {
          "Label": "RTM",
          "Packages": [
            {
              "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5f8a7e-462b-41ff-a5b2-04bdf5821ceb/OfficeServer.iso",
              "ChecksumType": "SHA256",
              "Checksum": "C576B847C573234B68FC602A0318F5794D7A61D8149EB6AE537AF04470B7FC05"
            }
          ]
        },
        {
          "Label": "22H2",
          "Packages": [
            {
              "DownloadUrl": "https://download.microsoft.com/download/8/d/f/8dfcb515-6e49-42e5-b20f-5ebdfd19d8e7/wssloc-subscription-kb5002270-fullfile-x64-glb.exe",
              "ChecksumType": "SHA256",
              "Checksum": "7E496530EB873146650A9E0653DE835CB2CAD9AF8D154CBD7387BB0F2297C9FC"
            },
            {
              "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5b1ee0-3336-45d7-b2f4-1e6af977d574/sts-subscription-kb5002271-fullfile-x64-glb.exe",
              "ChecksumType": "SHA256",
              "Checksum": "247011443AC573D4F03B1622065A7350B8B3DAE04D6A5A6DC64C8270A3BE7636"
            }
          ]
        },
        {
          "Label": "23H1",
          "Packages": [
            {
              "DownloadUrl": "https://download.microsoft.com/download/c/6/a/c6a17105-3d86-42ad-888d-49b22383bfa1/uber-subscription-kb5002355-fullfile-x64-glb.exe"
            }
          ]
        },
        {
          "Label": "23H2",
          "Packages": [
            {
              "DownloadUrl": "https://download.microsoft.com/download/f/5/5/f5559e3f-8b24-419f-b238-b09cf986e927/uber-subscription-kb5002474-fullfile-x64-glb.exe"
            }
          ]
        },
        {
          "Label": "24H1",
          "Packages": [
            {
              "DownloadUrl": "https://download.microsoft.com/download/b/a/b/bab0c7cc-0454-474b-8538-7927f75e6486/uber-subscription-kb5002564-fullfile-x64-glb.exe"
            }
          ]
        },
        {
          "Label": "24H2",
          "Packages": [
            {
              "DownloadUrl": "https://download.microsoft.com/download/6/6/a/66a0057f-79af-4307-8263-103ee75ef5c6/uber-subscription-kb5002640-fullfile-x64-glb.exe"
            }
          ]
        },
        {
          "Label": "Latest",
          "Packages": [
            {
              "DownloadUrl": "https://download.microsoft.com/download/c/e/c/ceca0241-efca-4484-9d76-5661806f16c4/uber-subscription-kb5002658-fullfile-x64-glb.exe"
            }
          ]
        }
      ]
    },
    "networkSettings": {
      "vNetPrivatePrefix": "10.1.0.0/16",
      "subnetDCPrefix": "10.1.1.0/24",
      "dcPrivateIPAddress": "10.1.1.4",
      "subnetSQLPrefix": "10.1.2.0/24",
      "subnetSPPrefix": "10.1.3.0/24",
      "vNetPrivateName": "[format('{0}-vnet', variables('resourceGroupNameFormatted'))]",
      "subnetDCName": "Subnet-DC",
      "subnetSQLName": "Subnet-SQL",
      "subnetSPName": "Subnet-SP",
      "nsgSubnetDCName": "NSG-Subnet-DC",
      "nsgSubnetSQLName": "NSG-Subnet-SQL",
      "nsgSubnetSPName": "NSG-Subnet-SP",
      "nsgRuleAllowIncomingRdp": [
        {
          "name": "allow-rdp-rule",
          "properties": {
            "description": "Allow RDP",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "[parameters('rdpTrafficRule')]",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 110,
            "direction": "Inbound"
          }
        }
      ]
    },
    "vmsSettings": {
      "enableAutomaticUpdates": true,
      "vmDCName": "DC",
      "vmSQLName": "SQL",
      "vmSPSubscriptionName": "SPSE",
      "vmSP2019Name": "SP2019",
      "vmSP2016Name": "SP2016",
      "vmDCImage": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
      "vmSQLImage": "MicrosoftSQLServer:sql2022-ws2022:sqldev-gen2:latest",
      "vmSPSubscriptionImage": "[variables('sharePointSettings').sharePointImagesList.Subscription]",
      "vmSP2019Image": "[variables('sharePointSettings').sharePointImagesList.sp2019]",
      "vmSP2016Image": "[variables('sharePointSettings').sharePointImagesList.sp2016]"
    },
    "dscSettings": {
      "forceUpdateTag": "1.0",
      "vmDCScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), format('dsc/ConfigureDCVM.zip{0}', parameters('_artifactsLocationSasToken')))]",
      "vmDCScript": "ConfigureDCVM.ps1",
      "vmDCFunction": "ConfigureDCVM",
      "vmSQLScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), format('dsc/ConfigureSQLVM.zip{0}', parameters('_artifactsLocationSasToken')))]",
      "vmSQLScript": "ConfigureSQLVM.ps1",
      "vmSQLFunction": "ConfigureSQLVM",
      "vmSPSubscriptionScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), format('dsc/ConfigureSPSE.zip{0}', parameters('_artifactsLocationSasToken')))]",
      "vmSPLegacyScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), format('dsc/ConfigureSPLegacy.zip{0}', parameters('_artifactsLocationSasToken')))]",
      "vmSPSubscriptionScript": "ConfigureSPSE.ps1",
      "vmSPLegacyScript": "ConfigureSPLegacy.ps1",
      "vmSPFunction": "ConfigureSPVM"
    },
    "deploymentSettings": {
      "sharePointSitesAuthority": "spsites",
      "sharePointCentralAdminPort": 5000,
      "localAdminUserName": "[format('l-{0}', uniqueString(subscription().subscriptionId))]",
      "enableAnalysis": false,
      "applyBrowserPolicies": true,
      "sqlAlias": "SQLAlias",
      "spSuperUserName": "spSuperUser",
      "spSuperReaderName": "spSuperReader",
      "adfsSvcUserName": "adfssvc",
      "sqlSvcUserName": "sqlsvc",
      "spSetupUserName": "spsetup",
      "spFarmUserName": "spfarm",
      "spSvcUserName": "spsvc",
      "spAppPoolUserName": "spapppool",
      "spADDirSyncUserName": "spdirsync"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "vnet-subnet-dc-nsg",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[if(equals(toLower(parameters('rdpTrafficRule')), 'no'), null(), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "vnet-subnet-sql-nsg",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[if(equals(toLower(parameters('rdpTrafficRule')), 'no'), null(), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "vnet-subnet-sp-nsg",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[if(equals(toLower(parameters('rdpTrafficRule')), 'no'), null(), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[format('vnet-{0}', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('networkSettings').vNetPrivatePrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('networkSettings').subnetDCName]",
            "properties": {
              "defaultOutboundAccess": false,
              "addressPrefix": "[variables('networkSettings').subnetDCPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-subnet-dc-nsg')]"
              }
            }
          },
          {
            "name": "[variables('networkSettings').subnetSQLName]",
            "properties": {
              "defaultOutboundAccess": false,
              "addressPrefix": "[variables('networkSettings').subnetSQLPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-subnet-sql-nsg')]"
              }
            }
          },
          {
            "name": "[variables('networkSettings').subnetSPName]",
            "properties": {
              "defaultOutboundAccess": false,
              "addressPrefix": "[variables('networkSettings').subnetSPPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-subnet-sp-nsg')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-subnet-dc-nsg')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-subnet-sp-nsg')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-subnet-sql-nsg')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "vm-dc-pip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(format('{0}-{1}', variables('resourceGroupNameFormatted'), variables('vmsSettings').vmDCName))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "vm-dc-nic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('networkSettings').dcPrivateIPAddress]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', uniqueString(resourceGroup().id)), variables('networkSettings').subnetDCName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-dc-pip')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-dc-pip')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "vm-dc",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmDcSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmsSettings').vmDCName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('timeZone')]",
            "enableAutomaticUpdates": "[variables('vmsSettings').enableAutomaticUpdates]",
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "[if(variables('vmsSettings').enableAutomaticUpdates, 'AutomaticByOS', 'Manual')]",
              "assessmentMode": "ImageDefault"
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[split(variables('vmsSettings').vmDCImage, ':')[0]]",
            "offer": "[split(variables('vmsSettings').vmDCImage, ':')[1]]",
            "sku": "[split(variables('vmsSettings').vmDCImage, ':')[2]]",
            "version": "[split(variables('vmsSettings').vmDCImage, ':')[3]]"
          },
          "osDisk": {
            "name": "vm-dc-disk-os",
            "caching": "ReadWrite",
            "osType": "Windows",
            "createOption": "FromImage",
            "diskSizeGB": 32,
            "managedDisk": {
              "storageAccountType": "[parameters('vmDcStorage')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vm-dc-nic')]"
            }
          ]
        },
        "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', null())]",
        "securityProfile": {
          "securityType": "TrustedLaunch",
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vm-dc-nic')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', 'vm-dc', 'apply-dsc')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.9",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
        "settings": {
          "wmfVersion": "latest",
          "configuration": {
            "url": "[variables('dscSettings').vmDCScriptFileUri]",
            "script": "[variables('dscSettings').vmDCScript]",
            "function": "[variables('dscSettings').vmDCFunction]"
          },
          "configurationArguments": {
            "domainFQDN": "[parameters('domainFqdn')]",
            "PrivateIP": "[variables('networkSettings').dcPrivateIPAddress]",
            "SPServerName": "[if(not(equals(parameters('provisionSharePointSubscription'), 'No')), variables('vmsSettings').vmSPSubscriptionName, if(parameters('provisionSharePoint2019'), variables('vmsSettings').vmSP2019Image, variables('vmsSettings').vmSP2016Image))]",
            "SharePointSitesAuthority": "[format('{0}SE', variables('deploymentSettings').sharePointSitesAuthority)]",
            "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
            "ApplyBrowserPolicies": "[variables('deploymentSettings').applyBrowserPolicies]",
            "ConfigureADFS": "[parameters('configureADFS')]"
          },
          "privacy": {
            "dataCollection": "enable"
          }
        },
        "protectedSettings": {
          "configurationArguments": {
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "[parameters('adminPassword')]"
            },
            "AdfsSvcCreds": {
              "UserName": "[variables('deploymentSettings').adfsSvcUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-dc')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "vm-sql-pip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(format('{0}-{1}', variables('resourceGroupNameFormatted'), variables('vmsSettings').vmSQLName))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "vm-sql-nic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', uniqueString(resourceGroup().id)), variables('networkSettings').subnetSQLName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-sql-pip')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-sql-pip')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "vm-sql",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSqlSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmsSettings').vmSQLName]",
          "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('timeZone')]",
            "enableAutomaticUpdates": "[variables('vmsSettings').enableAutomaticUpdates]",
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "[if(variables('vmsSettings').enableAutomaticUpdates, 'AutomaticByOS', 'Manual')]",
              "assessmentMode": "ImageDefault"
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[split(variables('vmsSettings').vmSQLImage, ':')[0]]",
            "offer": "[split(variables('vmsSettings').vmSQLImage, ':')[1]]",
            "sku": "[split(variables('vmsSettings').vmSQLImage, ':')[2]]",
            "version": "[split(variables('vmsSettings').vmSQLImage, ':')[3]]"
          },
          "osDisk": {
            "name": "vm-sql-disk-os",
            "caching": "ReadWrite",
            "osType": "Windows",
            "createOption": "FromImage",
            "diskSizeGB": 128,
            "managedDisk": {
              "storageAccountType": "[parameters('vmSqlStorage')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vm-sql-nic')]"
            }
          ]
        },
        "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', null())]",
        "securityProfile": {
          "securityType": "TrustedLaunch",
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vm-sql-nic')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', 'vm-sql', 'apply-dsc')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.9",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
        "settings": {
          "wmfVersion": "latest",
          "configuration": {
            "url": "[variables('dscSettings').vmSQLScriptFileUri]",
            "script": "[variables('dscSettings').vmSQLScript]",
            "function": "[variables('dscSettings').vmSQLFunction]"
          },
          "configurationArguments": {
            "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
            "DomainFQDN": "[parameters('domainFqdn')]"
          },
          "privacy": {
            "dataCollection": "enable"
          }
        },
        "protectedSettings": {
          "configurationArguments": {
            "DomainAdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "[parameters('adminPassword')]"
            },
            "SqlSvcCreds": {
              "UserName": "[variables('deploymentSettings').sqlSvcUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPSetupCreds": {
              "UserName": "[variables('deploymentSettings').spSetupUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-sql')]"
      ]
    },
    {
      "condition": "[not(equals(parameters('provisionSharePointSubscription'), 'No'))]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "vm-spse-pip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(format('{0}-{1}', variables('resourceGroupNameFormatted'), variables('vmsSettings').vmSPSubscriptionName))]"
        }
      }
    },
    {
      "condition": "[not(equals(parameters('provisionSharePointSubscription'), 'No'))]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "vm-spse-nic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', uniqueString(resourceGroup().id)), variables('networkSettings').subnetSPName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-spse-pip')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-spse-pip')]"
      ]
    },
    {
      "condition": "[not(equals(parameters('provisionSharePointSubscription'), 'No'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "vm-spse",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSharePointSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmsSettings').vmSPSubscriptionName]",
          "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('timeZone')]",
            "enableAutomaticUpdates": "[variables('vmsSettings').enableAutomaticUpdates]",
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "[if(variables('vmsSettings').enableAutomaticUpdates, 'AutomaticByOS', 'Manual')]",
              "assessmentMode": "ImageDefault"
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[0]]",
            "offer": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[1]]",
            "sku": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[2]]",
            "version": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[3]]"
          },
          "osDisk": {
            "name": "vm-spse-disk-os",
            "caching": "ReadWrite",
            "osType": "Windows",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('vmSharePointStorage')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vm-spse-nic')]"
            }
          ]
        },
        "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', null())]",
        "securityProfile": {
          "securityType": "TrustedLaunch",
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vm-spse-nic')]"
      ]
    },
    {
      "condition": "[not(equals(parameters('provisionSharePointSubscription'), 'No'))]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', 'vm-spse', 'apply-dsc')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.9",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
        "settings": {
          "wmfVersion": "latest",
          "configuration": {
            "url": "[variables('dscSettings').vmSPSubscriptionScriptFileUri]",
            "script": "[variables('dscSettings').vmSPSubscriptionScript]",
            "function": "[variables('dscSettings').vmSPFunction]"
          },
          "configurationArguments": {
            "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
            "DomainFQDN": "[parameters('domainFqdn')]",
            "DCServerName": "[variables('vmsSettings').vmDCName]",
            "SQLServerName": "[variables('vmsSettings').vmSQLName]",
            "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
            "SharePointVersion": "[parameters('provisionSharePointSubscription')]",
            "SharePointSitesAuthority": "[format('{0}SE', variables('deploymentSettings').sharePointSitesAuthority)]",
            "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
            "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
            "SharePointBits": "[variables('sharePointSettings').sharePointSubscriptionBits]",
            "ConfigureADFS": "[parameters('configureADFS')]"
          },
          "privacy": {
            "dataCollection": "enable"
          }
        },
        "protectedSettings": {
          "configurationArguments": {
            "DomainAdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "[parameters('adminPassword')]"
            },
            "SPSetupCreds": {
              "UserName": "[variables('deploymentSettings').spSetupUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPFarmCreds": {
              "UserName": "[variables('deploymentSettings').spFarmUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPAppPoolCreds": {
              "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPPassphraseCreds": {
              "UserName": "Passphrase",
              "Password": "[parameters('otherAccountsPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-spse')]"
      ]
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2019'), true())]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "vm-sp2019-pip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(format('{0}-{1}', variables('resourceGroupNameFormatted'), variables('vmsSettings').vmSP2019Name))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2019'), true())]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "vm-sp2019-nic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', uniqueString(resourceGroup().id)), variables('networkSettings').subnetSPName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-sp2019-pip')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-sp2019-pip')]"
      ]
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2019'), true())]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "vm-sp2019",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSharePointSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmsSettings').vmSP2019Name]",
          "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('timeZone')]",
            "enableAutomaticUpdates": "[variables('vmsSettings').enableAutomaticUpdates]",
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "[if(variables('vmsSettings').enableAutomaticUpdates, 'AutomaticByOS', 'Manual')]",
              "assessmentMode": "ImageDefault"
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[split(variables('vmsSettings').vmSP2019Image, ':')[0]]",
            "offer": "[split(variables('vmsSettings').vmSP2019Image, ':')[1]]",
            "sku": "[split(variables('vmsSettings').vmSP2019Image, ':')[2]]",
            "version": "[split(variables('vmsSettings').vmSP2019Image, ':')[3]]"
          },
          "osDisk": {
            "name": "vm-sp2019-disk-os",
            "caching": "ReadWrite",
            "osType": "Windows",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('vmSharePointStorage')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vm-sp2019-nic')]"
            }
          ]
        },
        "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', null())]",
        "securityProfile": {
          "securityType": "TrustedLaunch",
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vm-sp2019-nic')]"
      ]
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2019'), true())]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', 'vm-sp2019', 'apply-dsc')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.9",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
        "settings": {
          "wmfVersion": "latest",
          "configuration": {
            "url": "[variables('dscSettings').vmSPLegacyScriptFileUri]",
            "script": "[variables('dscSettings').vmSPLegacyScript]",
            "function": "[variables('dscSettings').vmSPFunction]"
          },
          "configurationArguments": {
            "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
            "DomainFQDN": "[parameters('domainFqdn')]",
            "DCServerName": "[variables('vmsSettings').vmDCName]",
            "SQLServerName": "[variables('vmsSettings').vmSQLName]",
            "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
            "SharePointVersion": "2019",
            "SharePointSitesAuthority": "[format('{0}2019', variables('deploymentSettings').sharePointSitesAuthority)]",
            "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
            "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
            "SharePointBits": null,
            "ConfigureADFS": "[parameters('configureADFS')]"
          },
          "privacy": {
            "dataCollection": "enable"
          }
        },
        "protectedSettings": {
          "configurationArguments": {
            "DomainAdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "[parameters('adminPassword')]"
            },
            "SPSetupCreds": {
              "UserName": "[variables('deploymentSettings').spSetupUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPFarmCreds": {
              "UserName": "[variables('deploymentSettings').spFarmUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPAppPoolCreds": {
              "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPPassphraseCreds": {
              "UserName": "Passphrase",
              "Password": "[parameters('otherAccountsPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-sp2019')]"
      ]
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2016'), true())]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "vm-sp2016-pip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(format('{0}-{1}', variables('resourceGroupNameFormatted'), variables('vmsSettings').vmSP2016Name))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2016'), true())]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "vm-sp2016-nic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', uniqueString(resourceGroup().id)), variables('networkSettings').subnetSPName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-sp2016-pip')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'vm-sp2016-pip')]"
      ]
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2016'), true())]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "vm-sp2016",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSharePointSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmsSettings').vmSP2016Name]",
          "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('timeZone')]",
            "enableAutomaticUpdates": "[variables('vmsSettings').enableAutomaticUpdates]",
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "[if(variables('vmsSettings').enableAutomaticUpdates, 'AutomaticByOS', 'Manual')]",
              "assessmentMode": "ImageDefault"
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[split(variables('vmsSettings').vmSP2016Image, ':')[0]]",
            "offer": "[split(variables('vmsSettings').vmSP2016Image, ':')[1]]",
            "sku": "[split(variables('vmsSettings').vmSP2016Image, ':')[2]]",
            "version": "[split(variables('vmsSettings').vmSP2016Image, ':')[3]]"
          },
          "osDisk": {
            "name": "vm-sp2016-disk-os",
            "caching": "ReadWrite",
            "osType": "Windows",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('vmSharePointStorage')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vm-sp2016-nic')]"
            }
          ]
        },
        "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', null())]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vm-sp2016-nic')]"
      ]
    },
    {
      "condition": "[equals(parameters('provisionSharePoint2016'), true())]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', 'vm-sp2016', 'apply-dsc')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.9",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
        "settings": {
          "wmfVersion": "latest",
          "configuration": {
            "url": "[variables('dscSettings').vmSPLegacyScriptFileUri]",
            "script": "[variables('dscSettings').vmSPLegacyScript]",
            "function": "[variables('dscSettings').vmSPFunction]"
          },
          "configurationArguments": {
            "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
            "DomainFQDN": "[parameters('domainFqdn')]",
            "DCServerName": "[variables('vmsSettings').vmDCName]",
            "SQLServerName": "[variables('vmsSettings').vmSQLName]",
            "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
            "SharePointVersion": "2016",
            "SharePointSitesAuthority": "[format('{0}2016', variables('deploymentSettings').sharePointSitesAuthority)]",
            "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
            "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
            "SharePointBits": null,
            "ConfigureADFS": "[parameters('configureADFS')]"
          },
          "privacy": {
            "dataCollection": "enable"
          }
        },
        "protectedSettings": {
          "configurationArguments": {
            "DomainAdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "[parameters('adminPassword')]"
            },
            "SPSetupCreds": {
              "UserName": "[variables('deploymentSettings').spSetupUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPFarmCreds": {
              "UserName": "[variables('deploymentSettings').spFarmUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPAppPoolCreds": {
              "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
              "Password": "[parameters('otherAccountsPassword')]"
            },
            "SPPassphraseCreds": {
              "UserName": "Passphrase",
              "Password": "[parameters('otherAccountsPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-sp2016')]"
      ]
    },
    {
      "condition": "[equals(parameters('enableAzureBastion'), true())]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "bastion-subnet-nsg",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHttpsInBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowGatewayManagerInBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "GatewayManager",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowLoadBalancerInBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowBastionHostCommunicationInBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowSshRdpOutBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRanges": [
                "22",
                "3389"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowAzureCloudCommunicationOutBound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "AzureCloud",
              "access": "Allow",
              "priority": 110,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowBastionHostCommunicationOutBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowGetSessionInformationOutBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "destinationPortRanges": [
                "80",
                "443"
              ],
              "access": "Allow",
              "priority": 130,
              "direction": "Outbound"
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 1000,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('enableAzureBastion'), true())]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', format('vnet-{0}', uniqueString(resourceGroup().id)), 'AzureBastionSubnet')]",
      "properties": {
        "addressPrefix": "10.1.4.0/24",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'bastion-subnet-nsg')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'bastion-subnet-nsg')]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "condition": "[equals(parameters('enableAzureBastion'), true())]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "bastion-pip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(replace(format('{0}-Bastion', variables('resourceGroupNameFormatted')), '_', '-'))]"
        }
      }
    },
    {
      "condition": "[equals(parameters('enableAzureBastion'), true())]",
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2023-11-01",
      "name": "bastion",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'bastion-pip')]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', uniqueString(resourceGroup().id)), 'AzureBastionSubnet')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'bastion-pip')]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', uniqueString(resourceGroup().id)), 'AzureBastionSubnet')]"
      ]
    }
  ],
  "outputs": {
    "publicIPAddressDC": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', 'vm-dc-pip'), '2023-11-01').dnsSettings.fqdn]"
    },
    "publicIPAddressSQL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', 'vm-sql-pip'), '2023-11-01').dnsSettings.fqdn]"
    },
    "publicIPAddressSPSE": {
      "type": "string",
      "value": "[if(not(equals(parameters('provisionSharePointSubscription'), 'No')), reference(resourceId('Microsoft.Network/publicIPAddresses', 'vm-spse-pip'), '2022-07-01').dnsSettings.fqdn, '')]"
    },
    "publicIPAddressSP2019": {
      "type": "string",
      "value": "[if(equals(parameters('provisionSharePoint2019'), true()), reference(resourceId('Microsoft.Network/publicIPAddresses', 'vm-sp2019-pip'), '2022-07-01').dnsSettings.fqdn, '')]"
    },
    "publicIPAddressSP2016": {
      "type": "string",
      "value": "[if(equals(parameters('provisionSharePoint2016'), true()), reference(resourceId('Microsoft.Network/publicIPAddresses', 'vm-sp2016-pip'), '2022-07-01').dnsSettings.fqdn, '')]"
    },
    "domainAdminAccount": {
      "type": "string",
      "value": "[format('{0}\\{1}', substring(parameters('domainFqdn'), 0, indexOf(parameters('domainFqdn'), '.')), parameters('adminUsername'))]"
    },
    "domainAdminAccountFormatForBastion": {
      "type": "string",
      "value": "[format('{0}@{1}', parameters('adminUsername'), parameters('domainFqdn'))]"
    },
    "localAdminAccount": {
      "type": "string",
      "value": "[variables('deploymentSettings').localAdminUserName]"
    }
  }
}